<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
 	

	
	
		
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 	
			이 파일은 web.xml이 기동되는 순간 읽어서 보조적으로 필요한 환경을
			설정하도록 만들어 놓은 파일이다.
			이 파일은 스프링 프로젝트의 모든 환경에 포함되는 공통적인
			환경 설정을 하도록 준비한 파일이다.
			모든이라는 말은 servelt에 관계없이.......
			만약 특정 Servlet에서만 환경 설정을 하고자 하면.....
			해당 환경 설정 파일(우리로 말하면 nadol-context.xml 파일)에 해주어야 한다.
	
		여기서 할 일
		컨넥션 풀을 설치하고
		설치된 컨넥션 풀을 다른 컨트롤러에서 사용할 수 있도록 DI 등록을 해준다.
	-->
	<!-- 	컨넥션 풀 설정 -->
	
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
  	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" /> 
	</bean>
	<!-- 	컨넥션풀을 사용하는 대상을 지정한다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 	myBatis에서 필요한 SQL을 작성하는 xml 파일의 위치를 등록한다.
				xml 파일을 등록하는 방법
				1.	Mapping을 이용하는 방법
					장점	xml이 만들어지면 하나씩 등록하기 때문에
							xml 파일을 필요한 위치에 만들 수 있다.
					단점	xml 파일을 만들때 마다 계속해서 등록을 해주어야 한다.
				2.	지금처럼 컨넥션 풀을 이용해서 등록하는 방법
					장점	xml 파일이 만들어져도 등록할 필요가 없다.
					단점	반드시 지정한 위치에 만들어야 한다.

		<property name="mapperLocations" value="classpath:/com/isundol/dol/sql/*.xml"/>
		-->
		<!-- 	xml 파일을 등록하는 환경 설정 파일을 따로 만들어서 사용한다. -->
		<property name="configLocation">
			<value>classpath:/com/isundol/dol/mybatis/myBatis-config.xml</value>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 	
			컨넥션 풀을 사용할 수 있도록 DI 등록을 한다.
			이처럼 DI등록을 하면 자바 파일에서 new 시키지 않고 사용할 수 있게 된다.
			이때 자바파일에서 이것을 사용하기 위해서는 id로 등록한 이름을
			이용해서 사용한다.
	-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>
	
	
	
	<!-- 	우리가 만든 DAO 클래스를 DI 기법으로 사용하기 위해서 등록한다. 
	<bean id="sampleDAO" class="com.isundol.dol.dao.SampleDAO"> 
   		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	-->
</beans>
